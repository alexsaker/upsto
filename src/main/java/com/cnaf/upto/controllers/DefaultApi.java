/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.cnaf.upto.controllers;

import com.cnaf.upto.models.DataSetList;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "default", description = "the default API")
public interface DefaultApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET / : List available data sets
     *
     * @return Returns a list of data sets (status code 200)
     */
    @ApiOperation(value = "List available data sets", nickname = "listDataSets", notes = "", response = DataSetList.class, tags={ "metadata", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns a list of data sets", response = DataSetList.class) })
    @RequestMapping(value = "/",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<DataSetList> listDataSets() throws Exception {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"total\" : 0, \"apis\" : [ { \"apiKey\" : \"apiKey\", \"apiUrl\" : \"apiUrl\", \"apiDocumentationUrl\" : \"apiDocumentationUrl\", \"apiVersionNumber\" : \"apiVersionNumber\" }, { \"apiKey\" : \"apiKey\", \"apiUrl\" : \"apiUrl\", \"apiDocumentationUrl\" : \"apiDocumentationUrl\", \"apiVersionNumber\" : \"apiVersionNumber\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.valueOf(200));

    }

}
